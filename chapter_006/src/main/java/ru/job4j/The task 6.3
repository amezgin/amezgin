Для анализа памяти виртуальной машины я использовал приложение JConsole.
Используется Virtual Machine: 
             Java HotSpot(TM) 64-Bit Server VM version 25.74-b02
             Vendor: 
             Oracle Corporation
Компилятор JIT compiler: 
           HotSpot 64-Bit Tiered Compilers
           Total compile time: 
           7,672 seconds

При запуске Tracker с параметрами по умолчанию анализ показал, что на момент запуска в куче было памяти:
Used - 2Mb, Committed - 112 Mb, Max - 1,6 Gb.

Сборщик мусора запускался редко.
Было запущено приложение с параметром -Xmx10m.
В результате на момент запуска приложения было:
Used - 2Mb, Commited - 9,2 Mb, Max - 9,2 Mb.

Как видно, куча разбита на 3 части:
Memory Pool "PS Eden Space", Memory Pool "PS Survivor Space" и Memory Pool "PS Old Gen".
Видно, что в процессе работы трекера быстро заполняется регион Eden и запускается малая сборка мусора.
Часть объектов переносится в регион Survivor. Затем при определенном заполнении данного региона опять запускается
сборщик мусора и часть объектов переносится в регион Old. Поскольку он занимает больше всего памяти, то заполняется он
достаточно медленно. Когда данный регион заполняется, то запускается полная сборка мусора и сборщик мусора
очищает все регионы.